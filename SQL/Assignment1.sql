USE AdventureWorks2019
----- 1 ----
select productid,Name,Color,ListPrice from [Production].[Product]

----- 2 -----
select productid,Name,Color,ListPrice from [Production].[Product] where ListPrice <> 0

----- 3 -----

select productid,Name,Color,ListPrice from [Production].[Product]  where color is null

----- 4 -----
select productid,Name,Color,ListPrice from [Production].[Product] where color is not null

----- 5 -----
select productid,Name,Color,ListPrice from [Production].[Product] where color is not null and ListPrice > 0

------ 6 ----
select Name+':'+color from [Production].[Product] where color is not null

----- 7 -----
select 'NAME: '+ Name+' -- COLOR: '+ color from production.product where color is not null

------ 8 -------
select productid,Name from [Production].[Product] where productid between 400 and 500

----- 9 ------
select productid,Name,Color from [Production].[Product] where color in ('Black','Blue')

------ 10 -----
select productid,Name,Color,ListPrice from [Production].[Product] where Name like 'S%' 

------ 11 -----
select Name,ListPrice from [Production].[Product] order by Name

------ 12 ------
select Name,ListPrice from [Production].[Product] where Name like 'S%' or Name like 'A%' order by Name

----- 13 ------
SELECT Name, ListPrice 
FROM [Production].[Product]
WHERE Name LIKE 'spo[^k]%'
ORDER BY Name

------ 14 -----
select distinct Color from [Production].[Product] order by Color desc

------ 15 ------
select distinct ProductSubcategoryID ,Color from Production.Product where Color is not null and ProductSubcategoryID is not null order by ProductSubcategoryID,Color

------ 16 ------
UNION: Combines the results of two or more SELECT queries and removes duplicate rows.
UNION ALL: Combines the results of two or more SELECT queries and includes all duplicates.

------ 17 ------
The WHERE clause is used to filter records before any grouping or aggregation takes place. It restricts the rows that are considered by the query.
The HAVING clause is used to filter records after grouping and aggregation. It restricts the results of a GROUP BY query based on aggregate functions.

------ 18 ------
An execution plan is a detailed roadmap generated by the SQL database engine that outlines how a query will be executed. It provides insights into how the database retrieves data, including the steps it takes, the indexes it uses, and the join methods it employs.

The method to view an execution plan using SQL Server Management Studio (SSMS):

Open SSMS and connect to your database.
Write your query in a new query window.
Click on the "Include Actual Execution Plan" button (or press Ctrl + M).
Execute the query (press F5).
The execution plan will be displayed in a new tab at the bottom.

------ 19 ------
INNER JOIN: Returns records that have matching values in both tables.
LEFT JOIN: Returns all records from the left table and matched records from the right table. Unmatched records will contain NULL values.
RIGHT JOIN: Returns all records from the right table and matched records from the left table. Unmatched records will contain NULL values.
FULL OUTER JOIN: Returns all records when there is a match in either left or right table. Unmatched records will contain NULL values.

------ 20 ------
SELECT user_id FROM Users WHERE user_id % 2 = 0

------ 21 ------
SELECT TOP 100 user_id FROM Users WHERE user_id % 2 <> 0 ORDER BY user_id

------ 22 ------
SELECT u.user_id
FROM dbo.users u
LEFT JOIN dbo.users2 u2 ON u.user_id = u2.user_id
WHERE u2.user_id IS NULL

------ 23 ------
SELECT user_id
FROM Training
WHERE training_date IN ('2024-08-02', '2024-08-03')
AND user_id IN (
    SELECT user_id
    FROM Training
    WHERE training_date = '2024-08-04'
)

------ 24 ------
SQL Profiler is a tool for monitoring and analyzing SQL Server events and performance, capturing and examining SQL queries, and diagnosing database issues.

------ 25 ------
A local variable in SQL Server is valid only within the batch, stored procedure, or function where it is declared.

------ 26 ------
master: Manages server-wide configuration and user information.
model: Template for creating new databases.
msdb: Stores SQL Server Agent jobs, alerts, and backup information.
tempdb: Temporary storage for session-specific data and intermediate results.

------ 27 ------
DDL (Data Definition Language): CREATE, ALTER, DROP, TRUNCATE.
DML (Data Manipulation Language): SELECT, INSERT, UPDATE, DELETE.


